quit
exit
(@pattern =~ req.path).nil?
@http_method.to_s.upcase == req.request_method
@http_method.to_s.upcase
@http_method.to_s
@http_method.to_s.uppercase
req.request_method
req:request_method
@http_method
@pattern =~ req.path
req.path
@pattern
quit
JSON.parse(req.cookies["_rails_lite_app"])
JSON.parse(req.cookies["_rails_lite_app"]
req.cookies["_rails_lite_app"].to_json
req.cookies["_rails_lite_app"].keys
req.cookies["_rails_lite_app"].key
req.cookies["_rails_lite_app"]
quit
exit
n
disp key
exit
n
disp content_erb
n
disp content
quit
exit
disp content
n
disp template_file
quit
exit
File.dirname(__FILE__)
File.dirname(__file__)
template_name.to_s
disp controller_name
disp template_file
n
disp File.dirname("views/#{controller_name}/#{template_name.to_s}.html.erb")
disp template_file = File.dirname("views/#{controller_name}/#{template_name.to_s}.html.erb")
exit
n
disp template_file
n
disp template_file
exit
n
disp template_file
exit
template_file
n
disp content
"views/#{controller_name}/#{template_name.to_s}.html.erb"
"views/#{controller_name}/#{template_name.to_s}"
template_file
"#{template_name.to_s}.html.erb"
"#{template_name.to_s}"
template_name.to_s
template_name
n
disp template_file
template_file
controller_name
"#{self.class}".underscore
"#{self.class}"
self.class
n
controller_name
exit
users_controller2.res
exit
@res.header
@res.set_header('Location','google.com')
@res.set_header['Location']='google.com'
@res.headers
@res
@res.header
exit
@res.body.empty?
@res.body.nil?
@res.body
@res
s
disp already_built_respons?
